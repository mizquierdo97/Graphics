#version 330 core

in Data
{
	vec3 color;
	vec2 texCoord;
}FSIn;


out vec4 outColor;

uniform sampler2D colorTex;
uniform sampler2D normalMap;
uniform int type = 0;
uniform vec2 texCoordInc = vec2(0.001);

void main(void)
{
float weights[11];
weights[0] =  0.035822;
weights[1] =  0.05879;
weights[2] =  0.086425;
weights[3] =  0.113806;
weights[4] =  0.13424;
weights[5] =  0.141836;
weights[6] =  0.13424;
weights[7] =  0.113806;
weights[8] =  0.086425;
weights[9] =  0.05879;
weights[10] = 0.035822;

vec3 blurColor = vec3(0,0,0);
vec3 color = texture(colorTex, FSIn.texCoord).rgb;
vec2 uv = vec2(0,0);
if(type == 0)
{
uv = vec2(FSIn.texCoord.x - texCoordInc.x * 5, FSIn.texCoord.y);
}
else
{
uv = vec2(FSIn.texCoord.x, FSIn.texCoord.y - texCoordInc.y * 5);
}
float sumWeights = 0.0f;

for(int i = 0; i < 11; i++)
{
    blurColor += texture(colorTex, uv).rgb * weights[i];
    sumWeights += weights[i];

if(type == 0)
uv += vec2(texCoordInc.x, 0);
else
uv += vec2(0, texCoordInc.y);


}
    //blurColor /= sumWeights;

    outColor = vec4(blurColor,1);
}
